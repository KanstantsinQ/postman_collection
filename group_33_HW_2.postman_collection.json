{
	"info": {
		"_postman_id": "19638d79-c453-4093-9f12-aa74c2183fee",
		"name": "group_33_HW_2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "/first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 1. Отправить запрос.\r",
							"\r",
							"// 2.Проверить, что в body приходит правильный string.\r",
							"pm.test(\"Body_chek\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"This is the first responce from server!ss\");\r",
							"});\r",
							"\r",
							"// 3.Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 1.Отправить запрос\r",
							"\r",
							"// 2.Провирить статус код 200\r",
							"pm.test(\"Verify Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// 3.Спарсить response body в json\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"// 4. Проверить, что name в ответе равно name s request (name вбить руками.)\r",
							"pm.test(\"Verify name\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(\"Kostik\");    \r",
							"});\r",
							"\r",
							"// 5. Проверить, что age в ответе равно age s request (age вбить руками.)\r",
							"pm.test(\"Verify age\", function () {\r",
							"    pm.expect(jsonData.age).to.eql(\"34\");\r",
							"});\r",
							"\r",
							"// 6. Проверить, что salary в ответе равно salary s request (salary вбить руками.)\r",
							"pm.test(\"Verify salary\", function () {\r",
							"    pm.expect(jsonData.salary).to.eql(2000);\r",
							"});\r",
							"\r",
							"// 7. Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"var resp_age = jsonData.age;\r",
							"var req = request.data;\r",
							"var req_age = req.age;\r",
							"console.log(\"Resp_age = \" + resp_age);\r",
							"console.log(\"Req_age = \" + req_age);\r",
							"pm.test(\"Req_Resp_AGE_chek\", function () {\r",
							"    pm.expect(resp_age).to.eql(req_age);\r",
							"});\r",
							"\r",
							"// 8. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"var resp_name = jsonData.name;\r",
							"var req = request.data;\r",
							"var req_name = req.name;\r",
							"console.log(\"Resp_name = \" + resp_name);\r",
							"console.log(\"Req_name = \" + req_name);\r",
							"pm.test(\"Req_Resp_NAME_chek\", function () {\r",
							"    pm.expect(resp_name).to.eql(req_name);\r",
							"});\r",
							"\r",
							"// 9. Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"var resp_salary = jsonData.salary;\r",
							"var req = request.data;\r",
							"var req_salary = +req.salary;\r",
							"console.log(\"Resp_salary = \" + resp_salary);\r",
							"console.log(\"Req_salary = \" + req_salary);\r",
							"pm.test(\"Req_Resp_SALARY_chek\", function () {\r",
							"    pm.expect(resp_salary).to.eql(req_salary);\r",
							"});\r",
							"\r",
							"// 10.Вывести в консоль параметр family из response.\r",
							"var resp_family = jsonData.family\r",
							"console.log(\"Resp_family = \" , resp_family);\r",
							"\r",
							"// 11.Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)\r",
							"var resp_u_salary_1_5_year = jsonData.family.u_salary_1_5_year;\r",
							"var req = request.data;\r",
							"var req_u_salary_1_5_year = +req.u_salary_1_5_year;\r",
							"console.log(\"Resp_u_salary_1_5_year = \" + resp_u_salary_1_5_year);\r",
							"pm.test(\"Req_Resp_SALARY_1_5_year_chek\", function () {\r",
							"    pm.expect(resp_salary*4).to.eql(resp_u_salary_1_5_year);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "34",
							"type": "default"
						},
						{
							"key": "name",
							"value": "Kostik",
							"type": "default"
						},
						{
							"key": "salary",
							"value": "2000",
							"type": "default"
						}
					]
				},
				"url": {
					"raw": "{{url}}/user_info_3",
					"host": [
						"{{url}}"
					],
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "/object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 1. Отправить запрос.\r",
							"\r",
							"// 2. Статус код 200\r",
							"pm.test(\"Verify Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// 3. Спарсить response body в json\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"// 4. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"var req_url = pm.request.url.query.toObject();\r",
							"console.log(\"req_url = \", req_url.name);\r",
							"var resp_name = jsonData.name;\r",
							"console.log(\"Resp_name = \" + resp_name);\r",
							"pm.test(\"Req_name_chek\", function () {\r",
							"    pm.expect(resp_name).to.eql(req_url.name);\r",
							"});\r",
							"\r",
							"// 5. Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"var resp_salary = jsonData.salary;\r",
							"var req_url = pm.request.url.query.toObject();\r",
							"console.log(\"req_url = \", req_url.salary);\r",
							"console.log(\"Resp_salary = \" + resp_salary);\r",
							"pm.test(\"Req_salary_chek\", function () {\r",
							"    pm.expect(resp_salary).to.eql(+req_url.salary);\r",
							"});\r",
							"\r",
							"// 6. Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"var resp_age = jsonData.age;\r",
							"var req_url = pm.request.url.query.toObject();\r",
							"console.log(\"req_url = \", req_url.age);\r",
							"console.log(\"Resp_age = \" , resp_age);\r",
							"pm.test(\"Req_age_chek\", function () {\r",
							"    pm.expect(resp_age).to.eql(req_url.age);\r",
							"});\r",
							"\r",
							"// 7. Вывести в консоль параметр family из response.\r",
							"var resp_family = jsonData.family;\r",
							"var req = request.data;\r",
							"console.log(\"Resp_family = \" , resp_family);\r",
							"\r",
							"//  8.Проверить, что у параметра dog есть параметры name.\r",
							"pm.test(\"Verify property name\", function () {\r",
							"    pm.expect(jsonData.family.pets.dog).to.have.property(\"name\");\r",
							"});\r",
							"\r",
							"// 9.Проверить, что у параметра dog есть параметры age\r",
							"pm.test(\"Verify property age\", function () {\r",
							"    pm.expect(jsonData.family.pets.dog).to.have.property(\"age\");\r",
							"});\r",
							"\r",
							"// 10.Проверить, что параметр name имеет значение Luky.\r",
							"var resp_name = jsonData.family.pets.dog.name;\r",
							"console.log(\"Resp_name = \" , resp_name);\r",
							"pm.test(\"Dog_name_Luky\", function () {\r",
							"    pm.expect(resp_name).to.eql(\"Luky\");\r",
							"});\r",
							"\r",
							"// 11. Проверить, что параметр age имеет значение 4.\r",
							"var resp_age = jsonData.family.pets.dog.age;\r",
							"console.log(\"Resp_age = \" , resp_age);\r",
							"pm.test(\"Dog_age_Luky\", function () {\r",
							"    pm.expect(resp_age).to.eql(4);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "{{url}}/object_info_3?name=Kostik&age=34&salary=1000",
					"host": [
						"{{url}}"
					],
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Kostik"
						},
						{
							"key": "age",
							"value": "34"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 1. Отправить запрос.\r",
							"\r",
							"// 2. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// // 3. Спарсить response body в json.\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"// 4.Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"var req_url = pm.request.url.query.toObject();\r",
							"console.log(\"req_url = \", req_url.name);\r",
							"var resp_name = jsonData.name;\r",
							"console.log(\"Resp_name = \" + resp_name);\r",
							"pm.test(\"Req_name_chek\", function () {\r",
							"    pm.expect(resp_name).to.eql(req_url.name);\r",
							"});\r",
							"\r",
							"// // 5.Проверить, что age в ответе равно age из request (age забрать из request.)\r",
							"var req_url = pm.request.url.query.toObject();\r",
							"console.log(\"req_url = \", req_url.age);\r",
							"var resp_age = jsonData.age\r",
							"console.log(\"Resp_age = \" , resp_age);\r",
							"pm.test(\"Req_age_chek\", function () {\r",
							"    pm.expect(resp_age).to.eql(+req_url.age);\r",
							"});\r",
							"\r",
							"\r",
							"// 6.Вывести в консоль параметр salary из request.\r",
							"var resp_salary = jsonData.salary;\r",
							"console.log(\"Resp_salary = \" + resp_salary);\r",
							"\r",
							"// 7.Вывести в консоль параметр salary из response.\r",
							"var req_url = pm.request.url.query.toObject();\r",
							"console.log(\"req_url = \", req_url.salary);\r",
							"\r",
							"\r",
							"// 8. Вывести в консоль 0-й элемент параметра salary из response.\r",
							"var resp_salary_0 = jsonData.salary[0];\r",
							"console.log(\"Resp_salary_0 = \" + resp_salary_0);\r",
							"\r",
							"// 9.Вывести в консоль 1-й элемент параметра salary параметр salary из response.\r",
							"var resp_salary_1 = jsonData.salary[1];\r",
							"console.log(\"Resp_salary_1 = \" + resp_salary_1);\r",
							"\r",
							"// 10.Вывести в консоль 2-й элемент параметра salary параметр salary из response.\r",
							"var resp_salary_2 = jsonData.salary[2];\r",
							"console.log(\"Resp_salary_2 = \" + resp_salary_2);\r",
							"\r",
							"// 11.Проверить, что 0-й элемент параметра salary равен salary из request (salary забрать из request.)\r",
							"pm.test(\"Req_Resp_Salary_0_chek\", function () {\r",
							"    pm.expect(resp_salary_0).to.eql(+req_url.salary);\r",
							"});\r",
							"\r",
							"// 12.Проверить, что 1-й элемент параметра salary равен salary*2 из request (salary забрать из request.)\r",
							"pm.test(\"Req_Resp_Salary_1_chek\", function () {\r",
							"    pm.expect(+resp_salary_1).to.eql(+req_url.salary*2);\r",
							"});\r",
							"\r",
							"// 13.Проверить, что 2-й элемент параметра salary равен salary*3 из request (salary забрать из request.)\r",
							"pm.test(\"Req_Resp_Salary_2_chek\", function () {\r",
							"    pm.expect(+resp_salary_2).to.eql(req_url.salary*3);\r",
							"});\r",
							"\r",
							"// 14.Создать и передать в окружении переменную name\r",
							"pm.environment.set(\"name\", resp_name);\r",
							"\r",
							"// 15.Создать и передать в окружении переменную age\r",
							"pm.environment.set(\"age\", resp_age);\r",
							"\r",
							"// 16.Создать и передать в окружении переменную salary\r",
							"pm.environment.set(\"salary\", req_url.salary);\r",
							"\r",
							"// 17.Написать цикл который выведет в консоль по порядку элементы списка из параметра salary.\r",
							"var salary_list = jsonData.salary;\r",
							"console.log(salary_list.length)\r",
							"for (var i = 0; i < salary_list.length; i++ ){\r",
							"console.log('arr_item = ', salary_list[i])\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Kostik",
							"type": "default",
							"disabled": true
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "default",
							"disabled": true
						},
						{
							"key": "age",
							"value": "34",
							"type": "default",
							"disabled": true
						}
					],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/object_info_4?name=Kostik&age=34&salary=1000",
					"host": [
						"{{url}}"
					],
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Kostik"
						},
						{
							"key": "age",
							"value": "34"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 1.Отправить запрос\r",
							"\r",
							"// 2. Статус код 200\r",
							"pm.test(\"Verify Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// 3.Спарсить response body в json.\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"// 4.Проверить, что json response имеет параметр start_qa_salary\r",
							"pm.test(\"Verify start_qa_salary\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"start_qa_salary\");\r",
							"});\r",
							"\r",
							"// 5.Проверить, что json response имеет параметр qa_salary_after_6_months\r",
							"pm.test(\"Verify qa_salary_after_6_months\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"qa_salary_after_6_months\");\r",
							"});\r",
							"\r",
							"// 6.Проверить, что json response имеет параметр qa_salary_after_12_months\r",
							"pm.test(\"Verify qa_salary_after_12_months\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"qa_salary_after_12_months\");\r",
							"});\r",
							"\r",
							"// 7. Проверить, что json response имеет параметр qa_salary_after_1.5_year\r",
							"pm.test(\"Verify qa_salary_after_1.5_year\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"qa_salary_after_1.5_year\");\r",
							"});\r",
							"\r",
							"// 8. Проверить, что json response имеет параметр qa_salary_after_3.5_years\r",
							"pm.test(\"Verify qa_salary_after_3.5_years\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"qa_salary_after_3.5_years\");\r",
							"});\r",
							"\r",
							"// 9. Проверить, что json response имеет параметр person\r",
							"pm.test(\"Verify property person\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"person\");\r",
							"});\r",
							"\r",
							"// 10.Проверить, что параметр start_qa_salary равен salary из request (salary забрать из request.)\r",
							"var resp_start_qa_salary = jsonData.start_qa_salary;\r",
							"var req = request.data;\r",
							"var req_start_qa_salary = jsonData.start_qa_salary;\r",
							"console.log(\"Resp_start_qa_salary = \" + resp_start_qa_salary);\r",
							"console.log(\"Req_start_qa_salary = \" + req_start_qa_salary);\r",
							"pm.test(\"start_qa_salary\", function () {\r",
							"    pm.expect(resp_start_qa_salary).to.eql(req_start_qa_salary);\r",
							"});\r",
							"\r",
							"// 11.Проверить, что параметр qa_salary_after_6_months равен salary*2 из request (salary забрать из request.)\r",
							"var resp_qa_salary_after_6_months = jsonData.qa_salary_after_6_months;\r",
							"var req = request.data;\r",
							"var req_qa_salary_after_6_months = jsonData.qa_salary_after_6_months;\r",
							"console.log(\"Resp_qa_salary_after_6_months = \" + resp_qa_salary_after_6_months);\r",
							"console.log(\"Req_qa_salary_after_6_months = \" + req_qa_salary_after_6_months);\r",
							"pm.test(\"qa_salary_after_6_months\", function () {\r",
							"    pm.expect(resp_qa_salary_after_6_months).to.eql(req_start_qa_salary*2);\r",
							"});\r",
							"// 12.Проверить, что параметр qa_salary_after_12_months равен salary*2.7 из request (salary забрать из request.)\r",
							"var resp_qa_salary_after_12_months = jsonData.qa_salary_after_12_months;\r",
							"var req = request.data;\r",
							"// var req_qa_salary_after_12_months = jsonData.qa_salary_after_12_months;\r",
							"console.log(\"Resp_qa_salary_after_12_months = \" + resp_qa_salary_after_12_months);\r",
							"// console.log(\"Req_qa_salary_after_12_months = \" + req_qa_salary_after_12_months);\r",
							"pm.test(\"qa_salary_after_12_months\", function () {\r",
							"    pm.expect(resp_qa_salary_after_12_months).to.eql(req_start_qa_salary*2.7);\r",
							"});\r",
							"// 13. Проверить, что параметр qa_salary_after_1.5_year равен salary*3.3 из request (salary забрать из request.)\r",
							"var resp_qa_salary_after_1_5_year = jsonData[\"qa_salary_after_1.5_year\"]\r",
							"var req = request.data;\r",
							"// var req_qa_salary_after_1_5_year = jsonData[\"qa_salary_after_1.5_year\"];\r",
							"console.log(\"Resp_qa_salary_after_1.5_year = \" + resp_qa_salary_after_1_5_year);\r",
							"// console.log(\"Req_qa_salary_after_1.5_year = \" + req_qa_salary_after_1_5_year);\r",
							"pm.test(\"qa_salary_after_1.5_year\", function () {\r",
							"    pm.expect(resp_qa_salary_after_1_5_year).to.eql(req_start_qa_salary*3.3);\r",
							"});\r",
							"\r",
							"// 14.Проверить, что параметр qa_salary_after_3.5_years равен salary*3.8 из request (salary забрать из request.)\r",
							"var resp_qa_salary_after_3_5_years = jsonData[\"qa_salary_after_3.5_years\"]\r",
							"var req = request.data;\r",
							"// var req_qa_salary_after_3_5_years = jsonData[\"qa_salary_after_3.5_years\"];\r",
							"console.log(\"Resp_qa_salary_after_3.5_years = \" + resp_qa_salary_after_3_5_years);\r",
							"// console.log(\"Req_qa_salary_after_3.5_years = \" + req_qa_salary_after_3_5_years);\r",
							"pm.test(\"qa_salary_after_3.5_years\", function () {\r",
							"    pm.expect(resp_qa_salary_after_3_5_years).to.eql(req_start_qa_salary*3.8);\r",
							"});\r",
							"\r",
							"// 15.Проверить, что в параметре person, 1-й элемент из u_name равен salary из request (salary забрать из request.)\r",
							"var resp_salary_u_name = jsonData.person.u_name[1];\r",
							"console.log(\"resp_salary_u_name = \" + resp_salary_u_name);\r",
							"pm.test(\"salary_u_name\", function () {\r",
							"    pm.expect(resp_salary_u_name).to.eql(req_start_qa_salary);\r",
							"});\r",
							"\r",
							"// 16. Проверить, что что параметр u_age равен age из request (age забрать из request.)\r",
							"var resp_u_age = jsonData.person.u_age;\r",
							"var req = request.data;\r",
							"var req_u_age = req.age;\r",
							"console.log(\"Resp_u_age = \" , resp_u_age);\r",
							"console.log(\"Req_u_age = \" , req_u_age);\r",
							"pm.test(\"salary_u_name\", function () {\r",
							"    pm.expect(resp_u_age).to.eql(+req_u_age);\r",
							"});\r",
							"\r",
							"// 17. Проверить, что параметр u_salary_5_years равен salary*4.2 из request (salary забрать из request.)\r",
							"var resp_u_salary_5_years = jsonData.person.u_salary_5_years;\r",
							"var req = request.data;\r",
							"// var req_u_salary_5_years = jsonData.u_salary_5_years;\r",
							"console.log(\"Resp_u_salary_5_years = \" + resp_u_salary_5_years);\r",
							"// console.log(\"Req_u_salary_5_years = \" + req_u_salary_5_years);\r",
							"pm.test(\"u_salary_5_years\", function () {\r",
							"    pm.expect(resp_u_salary_5_years).to.eql(req_start_qa_salary*4.2);\r",
							"});\r",
							"\r",
							"// 22. ***Написать цикл который выведет в консоль по порядку элементы списка из параметра person.\r",
							"var pers = (Object.keys(jsonData.person));\r",
							"for(i = 0; i < 3; i++){\r",
							"console.log(pers[i])\r",
							"}\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "default"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "default"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "default"
						}
					]
				},
				"url": {
					"raw": "{{url}}/user_info_2",
					"host": [
						"{{url}}"
					],
					"path": [
						"user_info_2"
					],
					"query": [
						{
							"key": "name",
							"value": "Kostik",
							"disabled": true
						},
						{
							"key": "age",
							"value": "35",
							"disabled": true
						},
						{
							"key": "salaty",
							"value": "2000",
							"disabled": true
						}
					]
				}
			},
			"response": []
		}
	]
}